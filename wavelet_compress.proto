// For documentation on protocol buffers, see:
//   https://developers.google.com/protocol-buffers/docs/proto

message WaveletCompressedImage {
  required int32 width = 1;
  required int32 height = 2;
  required int32 wavelet_transform_step_count = 3;


  enum WaveletAlgorithm {
    HAAR = 1;
    CDF79 = 2;
    CDF53 = 3;
  }
  required WaveletAlgorithm wavelet_algorithm = 4;

  // standard or nonstandard transform
  // standard: do all transform steps, then transpose
  // nonstandard: do one transform step, transpose, repeat
  enum WaveletTranspose {
    STANDARD = 1;    // do all transform steps, then transpose
    NONSTANDARD = 2; // do one transform step, transpose, repeat
  }
  optional WaveletTranspose wavelet_transpose = 5 [default = NONSTANDARD];

  // This proportion of the original data that was replaced with zero.
  // It will be a value between 0 and 1.
  // (this value is not needed when reconstructing the data)
  optional float threshold_fraction = 6;

  // All values with an absolute value less than this were replaced with zero.
  optional float threshold_value = 7;

  required int32 quantize_bits = 8;

  enum QuantizationAlgorithm {
    UNIFORM = 1;
    LOG = 2;
    COUNT = 3;
    LLOYD = 4;
  }
  optional QuantizationAlgorithm quantization_algorithm = 9;

  // the maximum value used when computing quantization
  optional float quant_max_value = 10;

  // The boundaries of the quantization bins
  // For N quantizeBits, there are 2^N bins, and (2^N)+1 boundaries.
  repeated float quant_bin_boundaries = 11 [packed=true];

  // The values that should be used to represent each quantized value.
  // AKA the codebook.
  // For N quantizeBits, there are 2^N quantize values.
  repeated float quant_bin_values = 12 [packed=true];

  repeated int32 huffman_encode_table = 13 [packed=true];
}

